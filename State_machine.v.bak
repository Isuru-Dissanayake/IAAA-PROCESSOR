module State_machine(

input clock,
input IR_Out,
input z,
input y,


output mcontrol,
output ALUOp,
output Mux1D,
output Mux1S,
output Mux2D,
output Mux2S,
output Mux3D,
output Mux3S,
output Mux4D,
output Mux4S
output PCD);


reg [5:0] current = 6b'000000; //present address 
reg [5:0] next = 6b'000001;    // Next address
reg [46:0] ram[63:0]; // there must be 47 bits for each output


initial begin

ram[0] = 47'b00000001000000000000000000000000000000000000001;
ram[1] = 47'b00000100000000000000000000000000000000001000010;
ram[2] = 47'b00001001000000000000000000101100100000000111111; // branching decision

ram[3] = 47'b00001100000000000000000000000000000000000000000;
ram[4] = 47'b00010000000000000000000000000000000000000000100;
ram[5] = 47'b00010100000000000000000000000000000000010000000;
ram[6] = 47'b00011000000000000010000000000000000000000000111;
ram[7] = 47'b00011100000000000000000000000001000000000000000;
ram[8] = 47'b00100001000000000000000000000001100000000001001;
ram[9] = 47'b00100100000000000000000000000000000000001001010;
ram[10] = 47'b00101000000010010100000000000000000000000001011;
ram[11] = 47'b00101110000000000000000000100100100000000001100;
ram[12] = 47'b00110000000000000000000000000000000000000001101;
ram[13] = 47'b00110100000010011100000000000000000000000001110;
ram[14] = 47'b00111000000000000000000000000001100000000000000;
ram[15] = 47'b00111100000000000110000000000000000000000010000;
ram[16] = 47'b01000000000000000000000000101010100000000010001;
ram[17] = 47'b01000100000000000010000000000000000000000010010;
ram[18] = 47'b01001011000000000000000000100100100000000000000;
ram[19] = 47'b01001100000000000010000000000000000000000010100;
ram[20] = 47'b01010010000000000000000000100100100000000010101;
ram[21] = 47'b01010100000000000000000000000000000000000010110;
ram[22] = 47'b01011000000010011100000000000000000000000010111;
ram[23] = 47'b01011100000000000000000000000001000000000000000;
ram[24] = 47'b01100000000000000010000001000000000000000011001;
ram[25] = 47'b01100100000100000000000000000000000000000000000;
ram[26] = 47'b01101000000000000010000000000000000000000011011;
ram[27] = 47'b01101100001000000000000000000000000000000000000;
ram[28] = 47'b01110000000000000010000001000000000000000011101;
ram[29] = 47'b01110100010100000000000000000000000000000000000;
ram[30] = 47'b01111000000000000010000001000000000000000011111;
ram[31] = 47'b01111100011100000000000000000000000000000000000;
ram[32] = 47'b10000000000000000010000001000000000000000100001;
ram[33] = 47'b10000100001100000000000000000000000000000000000;
ram[34] = 47'b10001000000000000010000000000000000000000100011;
ram[35] = 47'b10001100010000000000000000000000000000000000000;
ram[36] = 47'b10010000000000000010000001000000000000000100101;
ram[37] = 47'b10010100011000000000000000000000000000000000000;
ram[38] = 47'b10011000000000000000000000000000000000000100111;
ram[39] = 47'b10011100000010101100000000000000000000000101000;
ram[40] = 47'b10100000000000000000000000100010100000000000000;
ram[41] = 47'b10100100000000000000000000000000000000001000000;
ram[42] = 47'b10101000000000000010000001000000000000000101011;
ram[43] = 47'b10101100100000000000000000000000000000000000000;

end


always @(posedge clock)
begin

	if(y==1)
	begin
	current <= next;
	next <= next + 1;
	end
	


endmodule 